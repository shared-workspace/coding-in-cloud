<!-- eslint-disable @typescript-eslint/no-explicit-any -->
<script lang="ts" setup>
import { h, ref } from 'vue'

import CheckBoxInput from '../components/CheckBoxInput.vue'
import SelectInput from '../components/SelectInput.vue'
import { useData, type FeatureOptions } from '../composables/useData'
import FeaturePanel from '../components/FeaturePanel.vue'

const {
  companyName,
  companyOptions,
  companyCategoryOptions,
  categoryOptionsSelected,
  featureActive,
  featureOptions,
  filterOptions,
  filterActive,
} = useData()
const featureActiveName = ref('')
const categoryName = ref('')

const showCategoryPopup = ref(false)

const createNewCategory = () => {
  showCategoryPopup.value = true
}
const containerRef = ref<HTMLElement | null>(null)
const featureActiveSet = (feature: FeatureOptions | null) => {
  if (feature === null) {
    if (containerRef.value) containerRef.value.style.overflow = 'auto'
    featureActive.value = null
    return
  }
  if (containerRef.value) containerRef.value.style.overflow = 'hidden'
  featureActive.value = feature
  featureActiveName.value = feature.name
}
const FormCol = (_: any, { slots }: any) =>
  h(
    'div',
    { class: 'flex flex-col items-center mb-5 max-w-5xl mx-auto' },
    slots.default(),
  )
const featurePanelProps = {
  featureSave: () => {
    const feature = featureActive.value!
    const index = featureOptions.value.findIndex(f => f.name === feature.name)
    if (index === -1) {
      featureOptions.value.push(feature)
    } else {
      featureOptions.value[index] = feature
    }
  },
  closePanel: () => featureActiveSet(null),
}
</script>
<template>
  <div
    class="w-screen h-screen absolute top-0 left-0 bg-black bg-op-70 z-100"
    v-if="!!featureActive"
  >
    <!-- <div class="text-center">{{ featureActive.name }}</div> -->
    <div class="max-w-2xl mx-auto my-10 rounded-2xl bg-zinc-8 p-5">
      <div class="flex justify-end">
        <button
        :class="[
          'bg-red rounded-2xl px-4 py-2',
          featureActiveName ? 'cursor-pointer active:bg-red-5 hover:bg-red-6 hover:text-white' : 'cursor-not-allowed',
          ]"
        @click="featureActiveSet(null)"
        :disabled="!featureActiveName"
        >close</button>
      </div>
      <div class="text-center text-2xl">{{ companyName }}</div>
      <FormCol class="mt-10">
        <SelectInput
          labelText="Feature Label"
          v-model:main-name="featureActiveName"
        />
      </FormCol>
      <FeaturePanel
        :featureActiveName="featureActiveName"
        :featureActive="featureActive"
        :filterOptions="filterOptions"
        :filterActive="filterActive"
        :featureSave="featurePanelProps.featureSave"
        :closePanel="featurePanelProps.closePanel"
      />
    </div>
  </div>
  <div class="text-center max-w-3xl mx-auto" ref="containerRef">
    <h1 class="py-10">Data Upload</h1>
    <form method="post" @submit.prevent="createNewCategory">
      <FormCol>
        <SelectInput
          ref="companySelectRef"
          labelText="Company Name"
          v-model:main-name="companyName"
          v-model:main-options="companyOptions"
        />
      </FormCol>
      <FormCol>
        <CheckBoxInput
          ref="categoryRef"
          labelText="Category"
          v-model:main-name="categoryName"
          v-model:main-options="companyCategoryOptions"
          v-model:main-options-selected="categoryOptionsSelected"
        />
      </FormCol>
      <button
        class="cursor-pointer py-2 px-4 bg-blue rounded-3xl border-none my-5"
        type="submit"
      >
        Create New Feature Group
      </button>
    </form>
    <div class="m-2 text-black flex flex-col gap-4">
      <table class="min-w-full bg-white rounded-3xl overflow-hidden">
        <thead>
          <tr>
            <th class="py-2 px-4">Feature Name</th>
            <th class="py-2 px-4">Filters</th>
            <th class="py-2 px-4">Image Groups</th>
            <th class="py-2 px-4">Total Images</th>
          </tr>
        </thead>
        <tbody>
          <tr
            v-for="(feature, i) in featureOptions"
            :key="i"
            :class="[
              'h-16 hover:bg-zinc-2 cursor-pointer',
              featureActive?.name === feature.name
                ? 'bg-zinc-4'
                : 'active:bg-zinc-4',
            ]"
            @click="featureActiveSet(feature)"
          >
            <td class="py-2 px-4">{{ feature.name }}</td>
            <td class="py-2 px-4">{{ feature.filterCount }}</td>
            <td class="py-2 px-4">{{ feature.imageGroupCount }}</td>
            <td class="py-2 px-4">50</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</template>

<style>
input {
  outline: none;
  border: none;
  min-width: 500px;
  border-radius: 1.5rem;
  background: #e5e7eb;
  padding-top: 0.5rem; /* 8px */
  padding-bottom: 0.5rem; /* 8px */
  padding-left: 1rem; /* 16px */
  padding-right: 1rem; /* 16px */
}

input[type='checkbox'] {
  margin-right: 0.5rem;
  color: #fff;
}

select {
  outline: none;
  border: none;
  min-width: 500px;
  border-radius: 1.5rem;
  background: #e5e7eb;
  padding-top: 0.5rem; /* 8px */
  padding-bottom: 0.5rem; /* 8px */
  padding-left: 1rem; /* 16px */
  padding-right: 1rem; /* 16px */
}

select option {
  background: #e5e7eb;
  border: none;
  border-radius: 1.5rem;
  padding-top: 0.5rem; /* 8px */
  padding-bottom: 0.5rem; /* 8px */
  padding-left: 1rem; /* 16px */
  padding-right: 1rem; /* 16px */
}
label {
  font-size: 1.5rem;
  font-weight: 500;
}
</style>
